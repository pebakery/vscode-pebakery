{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "PEBakery",
	"scopeName": "source.pebakery",
	"patterns": [
        { "include": "#punctuations" },
        { "include": "#comments" },
        { "include": "#strings" },
        { "include": "#variables" },
        { "include": "#constants" },
        { "include": "#entities" },
        { "include": "#keywords" },
        { "include": "#markups" }
    ],
	"repository": {
        "punctuations": {
            "patterns": [
                {
                    "name": "punctuation.separator.pebakery",
                    "match": "[, ]"
                }
            ]
        },
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.pebakery",
                    "match": "^[\\s]*(//|#|;).*$"
                }
            ]
        },
        "strings": {
			"name": "string.quoted.double.pebakery",
			"begin": "\"",
			"end": "(\"|\n)",
			"patterns": [
				{
					"name": "constant.character.escape.pebakery",
					"match": "(#\\$(c|p|q|s|t|x)|##|%[^%]+%)"
				}
			]
        },
        "variables": {
            "patterns": [
                {
                    "name": "variable.other.pebakery",
                    "match": "%[^%]+%"
                },
                {
                    "name": "variable.parameter.pebakery",
                    "match": "#([0-9]|o[0-9]|c|a|r)"
                }
            ]
        },
        "constants": {
            "patterns": [
                {
                    "name": "constant.language.pebakery",
                    "match": "(?i)\\b(True|False|None)\\b"
                },
                { 
                    "name": "constant.language.pebakery",
                    "match": "(?i)\\b(Title|Description|Author|Version|Level|Selected|Mandatory|Interface|InterfaceList|PathSetting|lines)\\b"
                },
                { 
                    "name": "constant.language.pebakery",
                    "match": "(?i)\\b(HKLM|HKCU|HKCR|HKU|HKCC)\\b"
                },
                {
                    "name": "constant.language.pebakery",
                    "match": "(?i)\\b(Normal|Bold)\\b"
                },
                {
                    "name": "constant.numeric.hex.pebakery",
                    "match": "\\b0x[0-9a-fA-F]+\\b"
                },
                {
                    "name": "constant.numeric.float.pebakery",
                    "match": "\\b[0-9]+\\.[0-9]+(\\.[0-9]+)?(\\.[0-9]+)?\\b"
                },
                {
                    "name": "constant.numeric.float.pebakery",
                    "match": "\\b(-)?[0-9]+\\.[0-9]+\\b"
                },
                {
                    "name": "constant.numeric.integer.pebakery",
                    "match": "\\b(-)?[0-9]+\\b"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "punctuation.definition.keyword.pebakery",
                    "match": "="
                },
                {
                    "name": "keyword.control.pebakery",
                    "match": "(?i)\\b(FileCopy|FileDelete|FileRename|FileCreateBlank|FileSize|FileVersion|DirCopy|DirDelete|DirMove|DirMake|DirSize|PathMove)\\b"
                },
                {
                    "name": "keyword.control.pebakery",
                    "match": "(?i)\\b(RegHiveLoad|RegHiveUnload|RegRead|RegWrite|RegDelete|RegWriteEx|RegMulti|RegImport|RegExport|RegCopy)\\b"
                },
                {
                    "name": "keyword.control.pebakery",
                    "match": "(?i)\\b(TXTAddLine|TXTReplace|TXTDelLine|TXTDelSpaces|TXTDelEmptyLines)\\b"
                },
                {
                    "name": "keyword.control.pebakery",
                    "match": "(?i)\\b(IniRead|IniWrite|IniDelete|IniReadSection|IniAddSection|IniDeleteSection|IniWriteTextLine|IniMerge|IniCompact)\\b"
                },
                {
                    "name": "keyword.control.pebakery",
                    "match": "(?i)\\b(WimMount|WimUnmount|WimInfo|WimApply|WimExtract|WimExtractBulk|WimCapture|WimAppend|WimDelete|WimPathAdd|WimPathDelete|WimPathRename|WimOptimize|WimExport)\\b"
                },
                {
                    "name": "keyword.control.pebakery",
                    "match": "(?i)\\b(Compress|Decompress|Expand|CopyOrExpand)\\b"
                },
                {
                    "name": "keyword.control.pebakery",
                    "match": "(?i)\\b(WebGet)\\b"
                },
                {
                    "name": "keyword.control.pebakery",
                    "match": "(?i)\\b(Hash)\\b"
                },
                {
                    "name": "keyword.control.pebakery",
                    "match": "(?i)\\b(ExtractFile|ExtractAndRun|ExtractAllFiles|Encode)\\b"
                },
                {
                    "name": "keyword.control.pebakery",
                    "match": "(?i)\\b(Visible|ReadInterface|WriteInterface|Message|Echo|EchoFile|UserInput|AddInterface)\\b"
                },
                {
                    "name": "keyword.control.pebakery",
                    "match": "(?i)\\b(StrFormat)\\b"
                },
                {
                    "name": "keyword.control.pebakery",
                    "match": "(?i)\\b(Math)\\b"
                },
                {
                    "name": "keyword.control.pebakery",
                    "match": "(?i)\\b(List)\\b"
                },
                {
                    "name": "keyword.control.pebakery",
                    "match": "(?i)\\b(Run|Exec|Loop|LoopLetter|RunEx|LoopEx|LoopLetterEx|If|Else|Begin|End)\\b"
                },
                {
                    "name": "keyword.control.pebakery",
                    "match": "(?i)\\b(Set|SetMacro|AddVariables|Exit|Halt|Wait|Beep|GetParam|Return)\\b"
                },
                {
                    "name": "keyword.control.pebakery",
                    "match": "(?i)\\b(System|ShellExecute|ShellExecuteEx|ShellExecuteDelete)\\b"
                }
            ]
        },
        "entities": {
            "patterns": [
                {
                    "name": "storage.modifier.pebakery",
                    "match": "\\[[^\\[\\]]*\\]"
                },
                {
                    "name": "entity.name.function.pebakery",
                    "match": "(?i)\\b(HKLM|HKCU|HKCR|HKU|HKCC)\\b"
                },
                {
                    "name": "entity.name.function.pebakery",
                    "match": "(?i)\\b(DirPath|FilePath)\\b"
                },
                {
                    "name": "entity.name.function.pebakery",
                    "match": "(?i)\\b(ANSI|UTF8|UTF8BOM|UTF16|UTF16LE|UTF16BE)\\b"
                },
                {
                    "name": "entity.name.function.pebakery",
                    "match": "(?i)\\b(MD5|SHA1|SHA256|SHA384|SHA512)\\b"
                },
                {
                    "name": "entity.name.function.pebakery",
                    "match": "(?i)\\b(PRESERVE|NOERR|NOWARN|NOREC)\\b"
                },
                {
                    "name": "entity.name.function.pebakery",
                    "match": "(?i)\\b(NOACL|NOATTRIB|DISCARD|COMMIT|CHECK|NOCHECK|BOOT|REBUILD|PERMANENT|GLOBAL|NIL)\\b"
                },
                {
                    "name": "entity.name.function.pebakery",
                    "match": "(?i)\\b(IntToBytes|BytesToInt|Hex|Rand|Ceil|Floor|Round|Date|FileName|Ext|PathCombine|Inc|Dec|Mult|Div|Left|Right|Mid|Len|LTrim|RTrim|CTrim|NTrim|UCase|LCase|Pos|PosX|Replace|ReplaceX|Split|PadLeft|PadRight)\\b"
                },
                {
                    "name": "entity.name.function.pebakery",
                    "match": "(?i)\\b(Add|Sub|Mul|Div|IntDiv|Neg|ToSign|ToUnsign|BoolAnd|BoolOr|BoolXor|BoolNot|BitAnd|BitOr|BitXor|BitNot|BitShift|Floor|Ceil|Round|Abs|Pow|Hex|Dec|Rand)\\b"
                },
                {
                    "name": "entity.name.function.pebakery",
                    "match": "(?i)\\b(Get|Append|Insert|Remove|RemoveX|RemoveAt|Count|Pos|PosX|LastPos|LastPosX|Sort|SortX|SortN|SortNX)\\b"
                },
                {
                    "name": "entity.name.function.pebakery",
                    "match": "(?i)\\b(Cursor|ErrorOff|GetEnv|GetFreeDrive|GetFreeSpace|HasUAC|IsAdmin|OnBuildExit|OnScriptExit|OnPluginExit|RebuildVars|RefreshInterface|RefreshAllScripts|RescanScripts|LoadNewScript|RefreshScript|SaveLog|SetLocal|EndLocal)\\b"
                },
                {
                    "name": "entity.name.function.pebakery",
                    "match": "(?i)\\b(Text|Width|Height|Value|Tooltip|FontSize|FontWeight|FontStyle|NumberMin|NumberMax|NumberTick|Url|Items|SectionName|HideProgress)\\b"
                },
                {
                    "name": "entity.name.function.pebakery",
                    "match": "(?i)\\b(ExistFile|ExistDir|ExistSection|ExistRegSubKey|ExistRegValue|ExistVar|ExistMacro|ExistRegMulti|WimExistIndex|WimExistFile|WimExistDir|Equal|NotEqual|Smaller|SmallerEqual|Bigger|BiggerEqual|EqualX|Ping|Online|Not|Question|==|!=|<|<=|>|>=|===)\\b"
                },
                {
                    "name": "entity.name.function.pebakery",
                    "match": "(?i)\\b(Append|Prepend|Before|Behind|Place|Delete|Index)\\b"
                },
                {
                    "name": "entity.name.function.pebakery",
                    "match": "(?i)\\b(Encoding|Default|TimeOut|Referer|UserAgent|Filter|Delim|Split|Recomp|ImageName|ImageDesc|Flags|DeltaIndex|Password)\\b"
                }
            ]
        },
        "markups": {
            "patterns": [{
                "name": "markup.underline.link.pebakery",
                "match": "(?i)\\b(http://.+|https://.+)\\b"
            }]
        }
    }
}